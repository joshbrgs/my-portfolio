<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>SWE Stuff by Josh Burgess | Blog</title><description>My Tech Blog and Journey as a SWE</description><link>https://joshb.io/</link><language>en-us</language><item><title>Demystifying AI of Your Own</title><link>https://joshb.io/blog/Demystifying%20AI%20of%20Your%20Own/</link><guid isPermaLink="true">https://joshb.io/blog/Demystifying%20AI%20of%20Your%20Own/</guid><description>
&lt;h4&gt;Adopting RAG AI apps — Spoiler: Your Data is Still Your Own&lt;/h4&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*hXTOi0pJ5X2b2AGO&quot;&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@coopery?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Mohamed Nohassi&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;blockquote&gt;Artificial intelligence would be the ultimate version of Google. The ultimate search engine that would understand everything on the web. It would understand exactly what you wanted, and it would give you the right thing. We’re nowhere near doing that now. However, we can get incrementally closer to that, and that is basically what we work on. — Larry Page&lt;/blockquote&gt;
&lt;p&gt;Artificial Intelligence (AI) has revolutionized numerous industries, and 2024 is shaping up to be a pivotal year for Retrieval Augmented Generation (RAG) due to its rapid adoption and widespread discussion. In this article, I aim to explain the significance of RAG and provide a brief tutorial on how to implement RAG using a local Large Language Model (LLM), ensuring your data remains secure. LLMs, like &lt;a href=&quot;https://chatgpt.com/&quot;&gt;GPT-4&lt;/a&gt;, have revolutionized many applications, from customer service chatbots to complex data analysis. Yet, their limitations highlight the need for advancements like RAG.&lt;/p&gt;
&lt;h3&gt;Why RAG?&lt;/h3&gt;
&lt;p&gt;To understand RAG, it’s crucial to grasp how AI, particularly Large Language Models (LLMs), are trained and the limitations they face. Machine Learning, a discipline that has been evolving for decades, encompasses AI as a subset. AI’s recent focus has been on LLMs due to their remarkable ability to extract patterns from data and predict answers to input questions. These models use context to find the best fit for a query; however, if they lack sufficient context, they may confidently provide incorrect answers. This phenomenon occurs because LLMs are trained on a fixed dataset. Once an LLM is released, it stops training, which means it doesn’t stay updated with current events and might not provide specialized responses. When LLMs generate inaccurate or nonsensical answers with undue confidence, this is known as a hallucination.&lt;/p&gt;
&lt;p&gt;Hallucinations may be harmless and amusing when we’re testing how a Chat Agent will respond, but if you’re trying to quickly understand a new team proposal or a law under consideration, incorrect details from an LLM can harm your reputation. This is where Retrieval Augmented Generation (RAG) comes in to mitigate the hallucination issues inherent in LLMs. Retraining an LLM can be both time-consuming and expensive, but RAG offers a more efficient solution.&lt;/p&gt;
&lt;p&gt;RAG is a process where an LLM consumes documents and files as context to help answer queries with up-to-date data and provide more specialized responses. For example, &lt;a href=&quot;https://gemini.google.com/&quot;&gt;Gemini&lt;/a&gt; won’t know your Q3 sales information if it isn’t publicly available and included in its training data. RAG addresses hallucinations by enriching your query with relevant, current context.&lt;/p&gt;
&lt;h3&gt;I Know ChatGPT but I Am Scared To Give It My Data&lt;/h3&gt;
&lt;blockquote&gt;Every Business is a Software Business — Watts S. Humphrey&lt;/blockquote&gt;
&lt;blockquote&gt;If you’re not paying for the product, then you’re the product — The Social Dilemma.&lt;/blockquote&gt;
&lt;p&gt;It’s understandable to be cautious about freely sharing data, as it drives our business decision-making and distinguishes our business. Data is the product nowadays; it’s the story and presentation we craft that drive sales. One common misconception is that any LLM will automatically understand your data and take control out of your hands.&lt;/p&gt;
&lt;p&gt;However, cloud providers like GCP, AWS, and Azure offer base models and the capability to bring your own models, running them within your virtual private cloud (VPC). This approach allows you to continue training your models and ensures that your data stays secure and private, without exposure to unauthorized parties. Implementing a solution with an API Gateway can further safeguard your data. By leveraging these tools, your business can harness the power of LLMs without compromising data security.&lt;/p&gt;
&lt;h3&gt;RAGing on Your Setup&lt;/h3&gt;
&lt;p&gt;In this tutorial, we will be building your own RAG agent. The code is available at my GitHub: &lt;a href=&quot;https://github.com/joshbrgs/medium-tutorials&quot;&gt;https://github.com/joshbrgs/medium-tutorials&lt;/a&gt;. This project consists of a model created with Python, LangChain, and Chroma, which will be provided via a REST API. It’s okay if you don’t fully understand this tech stack; I will walk you through the model part below.&lt;/p&gt;
&lt;p&gt;You will need:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Python&lt;/li&gt;&lt;/ul&gt;
&lt;h4&gt;Getting and Testing an LLM&lt;/h4&gt;
&lt;p&gt;Large Language Models (LLMs) have been such a hot-button topic lately, and most people do not know that some of these models are open-source software allowing people to modify and experiment with them. Models are trained and deployed to Model Zoos. Popular Zoos are &lt;a href=&quot;https://huggingface.co/models&quot;&gt;Hugging Face&lt;/a&gt; and &lt;a href=&quot;https://ollama.com/library&quot;&gt;Ollama&lt;/a&gt;. I like both, but in this article, we will be using Ollama.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Visit &lt;a href=&quot;https://ollama.com/&quot;&gt;https://ollama.com/&lt;/a&gt; and click download&lt;/li&gt;
&lt;li&gt;Unzip the download and click on the Ollama.app&lt;/li&gt;
&lt;li&gt;Follow the prompts to install the cli&lt;/li&gt;
&lt;li&gt;Now you ollama run llama3&lt;/li&gt;
&lt;li&gt;If you see &amp;gt;&amp;gt;&amp;gt;, then you can type whatever to prompt your new local LLM!&lt;/li&gt;
&lt;li&gt;Let’s try “How do you calculate a company’s valuation?” This should give you a bunch of information regarding this topic :P&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you were to ask it for my EBITDA, it would give information on how to calculate it and where to look for the numbers but need help to do it for you because there is no way it knows what your documents look like. Let’s start using this LLM in code!&lt;/p&gt;
&lt;pre&gt;git clone https://github.com/joshbrgs/medium-articles.git&lt;br&gt;cd demystifying-ai&lt;br&gt;python3 -m venv env&lt;br&gt;source env/bin/activate&lt;br&gt;pip install -r requirements.txt&lt;/pre&gt;
&lt;p&gt;If you would like, I have a file that is already set up with the functionality needed, but if you want to experiment on your own you can follow along step by step.&lt;/p&gt;
&lt;pre&gt;from langchain_ollama import ChatOllama&lt;br&gt;&lt;br&gt;llm = ChatOllama(model=&quot;llama3&quot;, tempurature=0)&lt;br&gt;res = llm.invoke(&quot;What is my EBITDA?&quot;)&lt;br&gt;print(res)&lt;/pre&gt;
&lt;h4&gt;Your Documents, splitting, and Encoding Them&lt;/h4&gt;
&lt;p&gt;The key aspect of an RAG application is to provide your documents as context to the LLM, ensuring that the responses are personalized to you. Documents can be large and difficult to manage, especially when linking multiple ones together. This is where splitting and encoding come into play. Splitting involves breaking a document into smaller pieces of text, while encoding is the process of converting a sequence of characters into a specialized format. Think of it like coordinates for an LLM (e.g., Sonic the Hedgehog might be closely related to Delta Sonic Carwash because of the word “Sonic”). Most LLMs have a specific encoding mechanism, so OpenAI’s method will differ from Llama3’s.&lt;/p&gt;
&lt;p&gt;In our example, I will be using financial statements from Robinhood’s 2023 annual report, if you would like to follow along you can download them from &lt;a href=&quot;https://investors.robinhood.com/financials/annual-reports/default.aspx&quot;&gt;here&lt;/a&gt;. There is a lot of information in this pdf. One could modify the application to allow users to upload their documentation or retrieve it from a Database, or an instance of Office 365 if you feel ambitious.&lt;/p&gt;
&lt;pre&gt;from langchain_community.document_loaders import PyPDFLoader&lt;br&gt;from langchain_text_splitters import RecursiveCharacterTextSplitter&lt;br&gt;&lt;br&gt;file_path = &quot;./ey-eu-ai-act-political-agreement-overview-february-2024.pdf&quot;&lt;br&gt;loader = PyPDFLoader(file_path)&lt;br&gt;&lt;br&gt;docs = loader.load()&lt;br&gt;&lt;br&gt;print(len(docs))&lt;br&gt;&lt;br&gt;text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=200)&lt;br&gt;splits = text_splitter.split_documents(docs)&lt;br&gt;&lt;br&gt;print(len(splits))&lt;/pre&gt;
&lt;h4&gt;Setting Up a Vector Database&lt;/h4&gt;
&lt;p&gt;We were able to split up the file into smaller parseable chunks that are embedded, but to not need to do this step over and over, we can make sure to store the embeddings in a vector database. This enables the retrieval of information needed to answer your question. We will be using an open-source vector database called &lt;a href=&quot;https://www.trychroma.com/&quot;&gt;Chroma&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;from langchain_chroma import Chroma&lt;br&gt;from langchain_ollama import OllamaEmbeddings&lt;br&gt;from langchain_community.document_loaders import PyPDFLoader&lt;br&gt;from langchain_text_splitters import RecursiveCharacterTextSplitter&lt;br&gt;&lt;br&gt;file_path = &quot;./ey-eu-ai-act-political-agreement-overview-february-2024.pdf&quot;&lt;br&gt;loader = PyPDFLoader(file_path)&lt;br&gt;&lt;br&gt;docs = loader.load()&lt;br&gt;&lt;br&gt;text_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=200)&lt;br&gt;splits = text_splitter.split_documents(docs)&lt;br&gt;&lt;br&gt;embeddings = OllamaEmbeddings(model=&quot;llama3&quot;)&lt;br&gt;&lt;br&gt;vectorstore = Chroma.from_documents(documents=splits, embedding=embeddings)&lt;br&gt;&lt;br&gt;retriever = vectorstore.as_retriever()&lt;br&gt;&lt;br&gt;# query it&lt;br&gt;query = &quot;What is the 2023 net Profit&quot;&lt;br&gt;search = vectorstore.similarity_search(query)&lt;br&gt;&lt;br&gt;# print results&lt;br&gt;print(search[0].page_content)&lt;br&gt;print(search[0])&lt;/pre&gt;
&lt;h4&gt;Testing Out Our RAG Assistant&lt;/h4&gt;
&lt;p&gt;Now we can use this model to ask detailed questions about The European Artificial Intelligence Act document by EY. This information is distilled and questions are answered easily from our very own documents without the help of a Google Search, this LLM is all local and will work without the internet. I have taken the liberty to refactor our above code into something a little more usable and understandable. You can now call it with the first argument being the document of choice and second, your prompt! In the repository, I have broken these out into further functions. You can find these files in the git repo.&lt;/p&gt;
&lt;pre&gt;from pdf_loader import PDFLoader&lt;br&gt;from document_splitter import DocumentSplitter&lt;br&gt;from embeddings_generator import EmbeddingsGenerator&lt;br&gt;from rag_agent import RAGAgent&lt;br&gt;from utils import create_prompt_template&lt;br&gt;from langchain_ollama import ChatOllama&lt;br&gt;&lt;br&gt;def main():&lt;br&gt;    file_path = input(&quot;Please enter the path to the PDF file: &quot;)&lt;br&gt;    user_prompt = input(&quot;Please enter your prompt for the LLM: &quot;)&lt;br&gt;&lt;br&gt;    pdf_loader = PDFLoader(file_path)&lt;br&gt;    documents = pdf_loader.load_documents()&lt;br&gt;&lt;br&gt;    splitter = DocumentSplitter()&lt;br&gt;    splits = splitter.split_documents(documents)&lt;br&gt;&lt;br&gt;    embeddings_generator = EmbeddingsGenerator()&lt;br&gt;    retriever = embeddings_generator.generate_embeddings(splits)&lt;br&gt;&lt;br&gt;    llm = Ollama(model=&quot;llama3&quot;)&lt;br&gt;    prompt_template = create_prompt_template()&lt;br&gt;&lt;br&gt;    rag_agent = RAGAgent(retriever, llm, prompt_template)&lt;br&gt;    results = rag_agent.get_answer(user_prompt)&lt;br&gt;&lt;br&gt;    print(results[&quot;answer&quot;])&lt;br&gt;&lt;br&gt;    for document in results[&quot;context&quot;]:&lt;br&gt;        print(document)&lt;br&gt;        print()&lt;br&gt;&lt;br&gt;if __name__ == &quot;__main__&quot;:&lt;br&gt;    main()&lt;/pre&gt;
&lt;pre&gt;from langchain_community.document_loaders import PyPDFLoader&lt;br&gt;&lt;br&gt;class PDFLoader:&lt;br&gt;    def __init__(self, file_path):&lt;br&gt;        self.file_path = file_path&lt;br&gt;&lt;br&gt;    def load_documents(self):&lt;br&gt;        loader = PyPDFLoader(self.file_path)&lt;br&gt;        return loader.load()&lt;/pre&gt;
&lt;pre&gt;from langchain_text_splitters import RecursiveCharacterTextSplitter&lt;br&gt;&lt;br&gt;class DocumentSplitter:&lt;br&gt;    def __init__(self, chunk_size=1000, chunk_overlap=200):&lt;br&gt;        self.chunk_size = chunk_size&lt;br&gt;        self.chunk_overlap = chunk_overlap&lt;br&gt;&lt;br&gt;    def split_documents(self, documents):&lt;br&gt;        text_splitter = RecursiveCharacterTextSplitter(chunk_size=self.chunk_size, chunk_overlap=self.chunk_overlap)&lt;br&gt;        return text_splitter.split_documents(documents)&lt;/pre&gt;
&lt;pre&gt;from langchain_chroma import Chroma&lt;br&gt;from langchain_ollama import OllamaEmbeddings&lt;br&gt;&lt;br&gt;class EmbeddingsGenerator:&lt;br&gt;    def __init__(self, model=&quot;llama3&quot;):&lt;br&gt;        self.model = model&lt;br&gt;&lt;br&gt;    def generate_embeddings(self, documents):&lt;br&gt;        embeddings = OllamaEmbeddings(model=self.model)&lt;br&gt;        vectorstore = Chroma.from_documents(documents=documents, embedding=embeddings)&lt;br&gt;        return vectorstore.as_retriever()&lt;/pre&gt;
&lt;pre&gt;from langchain.chains import create_retrieval_chain&lt;br&gt;from langchain.chains.combine_documents import create_stuff_documents_chain&lt;br&gt;&lt;br&gt;class RAGAgent:&lt;br&gt;    def __init__(self, retriever, llm, prompt_template):&lt;br&gt;        self.retriever = retriever&lt;br&gt;        self.llm = llm&lt;br&gt;        self.prompt_template = prompt_template&lt;br&gt;&lt;br&gt;    def create_rag_chain(self):&lt;br&gt;        question_answer_chain = create_stuff_documents_chain(self.llm, self.prompt_template)&lt;br&gt;        return create_retrieval_chain(self.retriever, question_answer_chain)&lt;br&gt;&lt;br&gt;    def get_answer(self, prompt):&lt;br&gt;        rag_chain = self.create_rag_chain()&lt;br&gt;        return rag_chain.invoke({&quot;input&quot;: prompt})&lt;/pre&gt;
&lt;pre&gt;from langchain_core.prompts import ChatPromptTemplate&lt;br&gt;&lt;br&gt;def create_prompt_template():&lt;br&gt;    system_prompt = (&lt;br&gt;        &quot;You are an assistant for question-answering tasks. &quot;&lt;br&gt;        &quot;Use the following pieces of retrieved context to answer &quot;&lt;br&gt;        &quot;the question. If you don&apos;t know the answer, say that you &quot;&lt;br&gt;        &quot;don&apos;t know. Use three sentences maximum and keep the &quot;&lt;br&gt;        &quot;answer concise.&quot;&lt;br&gt;        &quot;\n\n&quot;&lt;br&gt;        &quot;{context}&quot;&lt;br&gt;    )&lt;br&gt;    return ChatPromptTemplate.from_messages(&lt;br&gt;        [&lt;br&gt;            (&quot;system&quot;, system_prompt),&lt;br&gt;            (&quot;human&quot;, &quot;{input}&quot;),&lt;br&gt;        ]&lt;br&gt;    )&lt;/pre&gt;
&lt;pre&gt;python3 main.py&lt;/pre&gt;
&lt;p&gt;If you enjoyed this tutorial and building this RAG application, I highly suggest looking at LangChain documentation and How To Guides. They are full of rich content and go more in-depth than I do in my quick tutorial. You can add to this by creating a UI where a user can prompt the Model, upload their documentation, and more!&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;RAG applications can create new business opportunities and enhance your products and understanding of your data. They can generate new material based on your existing content, create personalized chat agents, vet support issues, and distill information for your C-suite. With cloud providers offering hosting solutions for your LLMs, more businesses can adopt this innovative technology and set themselves apart from the competition.&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://chatgpt.com/&quot;&gt;https://chatgpt.com/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.langchain.com/&quot;&gt;LangChain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ollama.com/&quot;&gt;Ollama&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.trychroma.com/&quot;&gt;Chroma&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=51d8faf26b50&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;
</description><pubDate>Tue, 23 Jul 2024 01:56:11 GMT</pubDate></item><item><title>Building Your Keyboard</title><link>https://joshb.io/blog/Building%20Your%20Keyboard/</link><guid isPermaLink="true">https://joshb.io/blog/Building%20Your%20Keyboard/</guid><description>
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*UVszaTGWhvO27oI3C2J51Q.jpeg&quot;&gt;&lt;figcaption&gt;Completed Corne Keyboard&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;My Journey in Assembling My Corne Keyboard&lt;/h4&gt;
&lt;h3&gt;What’s a Corne Keyboard?&lt;/h3&gt;
&lt;blockquote&gt;The Corne keyboard is a split keyboard with 3x6 column staggered keys and 3 thumb keys, based on &lt;a href=&quot;https://github.com/MakotoKurauchi/helix&quot;&gt;Helix&lt;/a&gt;. Crkbd stands for Corne Keyboard. ~ Foostan, GitHub&lt;/blockquote&gt;
&lt;p&gt;This keyboard design is &lt;a href=&quot;https://github.com/foostan/crkbd&quot;&gt;open-source&lt;/a&gt; and developed by Foostan, a well-known developer in the keyboard community. The design can be modified from the 42-key 6-column layout to a 36-key 5-column layout; however, if you choose this you cannot add the columns back as you need to snap them off of your PCB.&lt;/p&gt;
&lt;p&gt;I also needed some soldering refreshers and found a couple of videos about &lt;a href=&quot;https://www.youtube.com/watch?v=-qk-ulz05J8&quot;&gt;soldering&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=OWNAjwhwzro&quot;&gt;flux&lt;/a&gt;, and &lt;a href=&quot;https://www.youtube.com/watch?v=bG7yW9FigJA&quot;&gt;desoldering&lt;/a&gt; to be helpful.&lt;/p&gt;
&lt;h4&gt;What you need:&lt;/h4&gt;
&lt;p&gt;Tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.googleadservices.com/pagead/aclk?sa=L&amp;amp;ai=DChcSEwjZ-9uVsp-GAxXlNwgFHRG0BWAYABAIGgJtZA&amp;amp;ase=2&amp;amp;gclid=Cj0KCQjwjLGyBhCYARIsAPqTz18M-IzeIhgTbB10qjWIwPCKDjYkt5i3L36rxonafCvhb5mOZkspm48aAowxEALw_wcB&amp;amp;ohost=www.google.com&amp;amp;cid=CAESVeD2kqZN0hYfb3VY4_OKJpxwBV34t9yW199EbvWFJEUcVPgFMAUuZf1KxE-6AlC13tmH4kMdASBb6Qpfz_duMEfKrJXr0L49FjlROZ-0aparw4xs8y0&amp;amp;sig=AOD64_02k2Id5ngRRICxppBWrjP6SDyztQ&amp;amp;ctype=5&amp;amp;q=&amp;amp;nis=4&amp;amp;ved=2ahUKEwjA19aVsp-GAxWbCnkGHdONCEoQww8oAnoECAYQDA&amp;amp;adurl=&quot;&gt;Soldering Iron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.google.com/shopping/product/14222052879336959065?q=amazon+solder+0.5mm&amp;amp;sca_esv=ec0f97d633954ec1&amp;amp;rlz=1C1GCEU_enUS1101US1101&amp;amp;sxsrf=ADLYWIL7tCRWGpPXgz2qvgAhGE6tB0Klbw:1716316786657&amp;amp;ictx=111&amp;amp;biw=1536&amp;amp;bih=791&amp;amp;dpr=1.25&amp;amp;prds=eto:7733697689470881708_0,pid:10832563362551640735&amp;amp;sa=X&amp;amp;ved=0ahUKEwjU95Cusp-GAxXjrYkEHSEUAOIQ8wIIoRA&quot;&gt;Solder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Liquid-Dropper-Soldering-Electrical-Electronics/dp/B0CN29BZKV/ref=zg_bs_g_8107037011_d_sccl_19/141-8726821-7254918?psc=1&quot;&gt;Flux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;https://www.googleadservices.com/pagead/aclk?sa=L&amp;amp;ai=DChcSEwjehtjDpqGGAxXlNggFHbfNCgMYABABGgJtZA&amp;amp;ase=2&amp;amp;gclid=CjwKCAjwr7ayBhAPEiwA6EIGxDJS4-KTJx6pyZPkSNN9OhoLRLLh4sgdaByapdZBPgCKMwGm68ip1RoC0l8QAvD_BwE&amp;amp;ohost=www.google.com&amp;amp;cid=CAESVeD2istNnqIGUtqPw8-KG4oh3M_I1WhyEROgF56T0gTXb9d3wZ_MdhMGQebxCx4IA9j3q0NyhJFnJS8N3ehwUtiO--cBmrBSASreqBole3ssVzwye2M&amp;amp;sig=AOD64_1ozVjQ6Ju3u1QSkRgDFXQl4JBJdA&amp;amp;ctype=5&amp;amp;q=&amp;amp;nis=4&amp;amp;ved=2ahUKEwj2y9LDpqGGAxX_tokEHVB-CbgQ9aACKAB6BAgGEBY&amp;amp;adurl=&quot;&gt;Isopropyl Alcohol&lt;/a&gt;, to clean the flux&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;https://www.googleadservices.com/pagead/aclk?sa=L&amp;amp;ai=DChcSEwj3ruTxtZ-GAxWFNAgFHceYBaoYABAFGgJtZA&amp;amp;ase=2&amp;amp;gclid=Cj0KCQjwjLGyBhCYARIsAPqTz18uTfEMx92hKI40neR0ZNFySAE1oApqlVvuWHlsviWgSESFSIHTeisaAvSlEALw_wcB&amp;amp;ohost=www.google.com&amp;amp;cid=CAESVeD2H-vg-kaFnpzTS4vZl1Eg0MNTRoBUmcZrSsUjWo5dUQSMqx16kViOhi-Dq-2RmV4lys2rG9yn0N7AEhh_AHlZW36t9K7w598rm4rwZtT5Fw-OXi8&amp;amp;sig=AOD64_16ub9LxK2G4NnU7glSHcKLWq-Bfg&amp;amp;ctype=5&amp;amp;q=&amp;amp;nis=4&amp;amp;ved=2ahUKEwid_t3xtZ-GAxUJk4kEHTM3DHIQ9aACKAB6BAgFECs&amp;amp;adurl=&quot;&gt;Tweezers&lt;/a&gt;, I like the reverse grip&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Optional, yet helpful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&quot;https://www.amazon.com/Solder-Desoldering-Remover-Soldering-Circuit/dp/B0BR4F7XQF?source=ps-sl-shoppingads-lpcontext&amp;amp;ref_=fplfs&amp;amp;psc=1&amp;amp;smid=A14WJ9O8JEFZO0&quot;&gt;Solder Wick Braid Copper Wire&lt;/a&gt; (for undoing your mistakes)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.googleadservices.com/pagead/aclk?sa=L&amp;amp;ai=DChcSEwjW-cncsp-GAxVCMwgFHdgBBlgYABADGgJtZA&amp;amp;ase=2&amp;amp;gclid=Cj0KCQjwjLGyBhCYARIsAPqTz1_YA_7FYTzWa37gsi9mKYUlqcaN8wfmxraYq54fGGcFy3OnvMZe3DgaAtm_EALw_wcB&amp;amp;ohost=www.google.com&amp;amp;cid=CAESVeD2MgrDpzUf5g5U1dYfpRnMAv6tMCzkN6MmySAwN8muaYHp9oQiVM0aaT699-mVKM3-Ykt-BQ3nM26J2ZCO3m5WmtHoS06_cBxULKDKBzWGPrsXtGk&amp;amp;sig=AOD64_2mX0UhgBqsvvgm8z-IHo5z0j9n-A&amp;amp;ctype=5&amp;amp;q=&amp;amp;nis=4&amp;amp;ved=2ahUKEwj2yMTcsp-GAxXsvokEHXTbDpoQ9aACKAB6BAgGEA8&amp;amp;adurl=&quot;&gt;Solder Pump&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.googleadservices.com/pagead/aclk?sa=L&amp;amp;ai=DChcSEwjJzKDqsp-GAxWFNwgFHWMoBbkYABAIGgJtZA&amp;amp;ase=2&amp;amp;gclid=Cj0KCQjwjLGyBhCYARIsAPqTz1_riS_Qx7--PD99A5pLbaHSk7ipOOQKo1IwsUevfMcxbzKV1-N4Cr4aAt_fEALw_wcB&amp;amp;ohost=www.google.com&amp;amp;cid=CAESVeD2FWD4Xd3LE0jvc_3ILJcJpPr3xM2AaXgA_3oj_zJIprb0LIrCl9vGH5y8opIoVFehcuOFXY6Zy4O8D1NRFkSeG3KxhXw-0HjbSUXkV-CATrE2OlE&amp;amp;sig=AOD64_2UNB75aG9MHBlerk8SdYtRwSwzxA&amp;amp;ctype=5&amp;amp;q=&amp;amp;nis=4&amp;amp;ved=2ahUKEwjiq5vqsp-GAxWwjIkEHc2sCtoQ9aACKAB6BAgGECQ&amp;amp;adurl=&quot;&gt;Solder Mat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.googleadservices.com/pagead/aclk?sa=L&amp;amp;ai=DChcSEwjP5632sp-GAxXmSf8BHeDbAr8YABANGgJtZA&amp;amp;ase=2&amp;amp;gclid=Cj0KCQjwjLGyBhCYARIsAPqTz1-_j7J35l54212ZTTaVM5_1u-rMTqCAJKNeBUL9Bphu19Xs6mI4OWUaAjPTEALw_wcB&amp;amp;ohost=www.google.com&amp;amp;cid=CAESVeD268PI1DFv6Iiv3ierdq80WQdMw78V1klRVfP3rVtR--Oy83uacPYSF0kf34jj8ns5pBlCIXbRdEuQl-6i8zDdhfX7yP-3KakevoMrsl7JGj6mY2k&amp;amp;sig=AOD64_2sR_mT_G1ypUIT0Nb2-bPf0_ayFw&amp;amp;ctype=5&amp;amp;q=&amp;amp;nis=4&amp;amp;ved=2ahUKEwjytqj2sp-GAxUqhIkEHRhDAf4Q9aACKAB6BAgCEFU&amp;amp;adurl=&quot;&gt;Safety Glasses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.googleadservices.com/pagead/aclk?sa=L&amp;amp;ai=DChcSEwik-uiEs5-GAxXXNggFHfwWAf4YABAIGgJtZA&amp;amp;ase=2&amp;amp;gclid=Cj0KCQjwjLGyBhCYARIsAPqTz1_Kwjs-Q3D1oKSmuYQQCpVbkLHNlQPqPzsPf4Mv2r5fILHyChMt3f0aAt5DEALw_wcB&amp;amp;ohost=www.google.com&amp;amp;cid=CAESVeD2lzII50IU4iAvR2TKt_SXsupTOu00AKzjqd16f3AqHwB70pPBSPLbd0jGsYcb2ktRnoMdqLZ1oTUvefoWilxUAAGYgW0O5xT4HgAeMRWdPUOWDuw&amp;amp;sig=AOD64_2m1e4AN_qhPjbqsuxv9rCBx5LIjg&amp;amp;ctype=5&amp;amp;q=&amp;amp;nis=4&amp;amp;ved=2ahUKEwjk1uKEs5-GAxWMkYkEHaC1COgQ9aACKAB6BAgEEBY&amp;amp;adurl=&quot;&gt;Solder Ventilation Fan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.com/Scotch-Heat-Resistant-Listed-Certified-Electrical/dp/B001AXD0EY?source=ps-sl-shoppingads-lpcontext&amp;amp;ref_=fplfs&amp;amp;psc=1&amp;amp;smid=ATVPDKIKX0DER&quot;&gt;Electrical Tape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.googleadservices.com/pagead/aclk?sa=L&amp;amp;ai=DChcSEwiaotactp-GAxXmSf8BHeDbAr8YABAKGgJtZA&amp;amp;ase=2&amp;amp;gclid=Cj0KCQjwjLGyBhCYARIsAPqTz1_Oas8tL7cg2MYmW4YDCNNWRVRcKT-kpp5ldu9gmTti7T2vydYSyxYaAssbEALw_wcB&amp;amp;ohost=www.google.com&amp;amp;cid=CAESVeD2_IsBa0Vs4WAFkiFWvdTn6YwtZTjU5vnGGdQv2kARC0UH5332bxXkpT2u_Vszky0VODj025wBrw5MJLJ3VqRTnGsNm4twkN1Ncma5o5To9Gv44dI&amp;amp;sig=AOD64_1QHa5YM2aDzyV0sm0sjwuDgG7Ylw&amp;amp;ctype=5&amp;amp;q=&amp;amp;nis=4&amp;amp;ved=2ahUKEwigxdCctp-GAxXjrYkEHSEUAOIQ9aACKAB6BAgDEA8&amp;amp;adurl=&quot;&gt;Magnifying Lens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.googleadservices.com/pagead/aclk?sa=L&amp;amp;ai=DChcSEwiU89WvzqaGAxXMXkcBHSdEDcMYABALGgJxdQ&amp;amp;ase=2&amp;amp;gclid=CjwKCAjw9cCyBhBzEiwAJTUWNTYCdksksUo2KxwEQQDhaoOTHeXC0tybhgDTdC9Bw2_uJ4boP9C0GxoCBVEQAvD_BwE&amp;amp;ei=b7NQZtTrDYOk5NoPqbaF2A4&amp;amp;ohost=www.google.com&amp;amp;cid=CAESVeD2e-86Quh2IT8ljbhFaFy1JKK9xCE_-AqsexYpc-I6hG5nx4AIkzeZ-koJ-A5MI_MlHFnYppYxvQJsfzlGG2SxZPMXrYqfseLAdxC0WsYWSdRjxBE&amp;amp;sig=AOD64_0xOL5IX-7wiy7N_KMx82WO4vdLlg&amp;amp;ctype=5&amp;amp;q=&amp;amp;nis=4&amp;amp;sqi=2&amp;amp;ved=2ahUKEwiU38-vzqaGAxUDElkFHSlbAesQww8oAnoECAMQDA&amp;amp;adurl=&quot;&gt;Multimeter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*2IoZ0dJIH5dek0I2ZnlI_A.jpeg&quot;&gt;&lt;figcaption&gt;For the basic tooling I bought, I ended up needing the solder wick, multimeter, and tape&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Net you will need the actual parts to build this keyboard. If you have the means and material, you can 3D print the keycaps and case and even order the PCB based on a design. I went with a combination of places to source my parts, but the main electronics are from Keebmaker. My favorites are &lt;a href=&quot;https://keebmaker.com/&quot;&gt;Keebmaker&lt;/a&gt;, &lt;a href=&quot;https://typeractive.xyz/&quot;&gt;Typeractive&lt;/a&gt;, and &lt;a href=&quot;https://splittype.com/&quot;&gt;SplitType&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Corne PCBs x2&lt;/li&gt;
&lt;li&gt;Micro-controllers x2&lt;/li&gt;
&lt;li&gt;Controller Pins x48&lt;/li&gt;
&lt;li&gt;Diodes x36–42&lt;/li&gt;
&lt;li&gt;Kailh Switch Hot Swap Sockets x36–42&lt;/li&gt;
&lt;li&gt;TRRS Jacks x2 (optional if you choose nice!nano controllers for Bluetooth connection)&lt;/li&gt;
&lt;li&gt;Reset Buttons x2&lt;/li&gt;
&lt;li&gt;TRRS Cable x1 (optional if you choose nice!nano controllers for Bluetooth connection)&lt;/li&gt;
&lt;li&gt;Key Switches x36–42&lt;/li&gt;
&lt;li&gt;Keycaps x36–42&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Suggested Fun parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keyboard Case x1&lt;/li&gt;
&lt;li&gt;Controller Hot Swap Headers x48&lt;/li&gt;
&lt;li&gt;OLED Screens 2&lt;/li&gt;
&lt;li&gt;OLED Pins x8&lt;/li&gt;
&lt;li&gt;OLED Hot Swap Headers x8&lt;/li&gt;
&lt;li&gt;OLED Covers and Hardware x2&lt;/li&gt;
&lt;li&gt;SK6812 3535 LEDs x12&lt;/li&gt;
&lt;li&gt;SK6812 Mini-E LEDs x36–42&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Firmware:&lt;/p&gt;
&lt;p&gt;The Wired option of a Corne keyboard can use &lt;a href=&quot;https://usevia.app/&quot;&gt;VIA&lt;/a&gt; and &lt;a href=&quot;https://qmk.fm/&quot;&gt;QMK&lt;/a&gt;, which are a little more user-friendly compared to the wireless option which is&lt;a href=&quot;https://zmk.dev/&quot;&gt; ZMK&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;The Diodes:&lt;/h3&gt;
&lt;p&gt;skill: easy&lt;br&gt;desolder: easy&lt;/p&gt;
&lt;h4&gt;What’s a Diode?&lt;/h4&gt;
&lt;p&gt;A diode is a semiconductor that allows the current to flow in one single direction and restricts it coming from the opposite. They also change AC (alternating current) to DC (direct current). A diode can fail due to overheating or an overvoltage spike, which causes a short circuit.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*j6WztAWz7iT3K5W2b1uDcQ.jpeg&quot;&gt;&lt;figcaption&gt;Absolutely make sure the line on the diode is lined up with the line marker on your PCB!&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I followed Keebmaker’s Guide to assembling my Corne and set the soldering iron to 400° C. PCB components can burn, so the idea is to be quick. When soldering the diodes, I found it easiest to pre-tin one of the pads in each pair on the PCB. Then take the diode with tweezers and heat the soldered pad, slide and hold the diode and it will harden correctly onto the board. Make sure the 3 lines of the diode are lined up to the line mark on the PCB-designated diode space! Next, go around and solder the other leg to the opposite PCB pad.&lt;/p&gt;
&lt;h3&gt;Switch Hot Swap Sockets:&lt;/h3&gt;
&lt;p&gt;skill: easy&lt;br&gt;desolder: medium&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*TROpFnUeL-C5FSVyv0ZRWQ.jpeg&quot;&gt;&lt;figcaption&gt;I found these pieces easier to solder&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;I found pre-tinning all the pads for the switches to be the easiest way to tackle mounting the components. After each pad is tinned, all one has to do is set the switch along the pads and press the iron down on the switch until the solder melts under it and the component will be mounted to said board.&lt;/p&gt;
&lt;h3&gt;Reset Switches:&lt;/h3&gt;
&lt;p&gt;skill: easy&lt;br&gt;desolder: easy&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*iIM-UApkAUk6MZpsb4sVqg.jpeg&quot;&gt;&lt;figcaption&gt;The Reset switch in my kit faces up, whereas some may face out&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;With the reset switch, you have to flip the board right side up (opposite of the diodes) place the legs down through, and then solder the legs to the board on the underside.&lt;/p&gt;
&lt;h3&gt;TRS Jacks (Optional for Wireless Builds):&lt;/h3&gt;
&lt;p&gt;skill: easy&lt;br&gt;desolder: easy&lt;/p&gt;
&lt;p&gt;&lt;em&gt;After this step, I had forgotten to take a couple of pictures as these steps went much quicker than earlier ones.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The TRS Jack is very similar to the rest switch, although due to it being a larger component, one may have to apply electrical tape to keep it in place. The TRS jack on the keyboard allows communication between the two boards. This is optional when you build a wireless board because the controllers will then connect over Bluetooth.&lt;/p&gt;
&lt;h3&gt;Controller Socket Headers and pins:&lt;/h3&gt;
&lt;p&gt;skill: easy&lt;br&gt;desolder: hard&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*wkGRokyKn0gTvqUlti5OcA.jpeg&quot;&gt;&lt;figcaption&gt;This does not have pins installed, but be sure to tuck the battery under to solder the pins on the correct height&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;em&gt;For both headers, it is optional, but highly recommended to use hot swappable socket headers, in case you switch out the microcontroller or OLED screen, and I enjoyed the low profile sockets sold at Keebmaker.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Your controller will have labels next to each hole where your pins should connect to the same label on the PCB where the socket is. I found it easiest to click the pins into the header and then the controller can be soldered. Be sure to quickly solder as this is most likely the most expensive piece of the build with the least heat resistance.&lt;/p&gt;
&lt;p&gt;This step is the same for the OLED, just perform the OLED assembly after the battery.&lt;/p&gt;
&lt;h3&gt;Flashing the Controllers:&lt;/h3&gt;
&lt;p&gt;This was my favorite part, most of the nuances are explained and well-documented for the wireless builds at &lt;a href=&quot;https://zmk.dev/&quot;&gt;https://zmk.dev/&lt;/a&gt;. This step requires you to clone the zmk repo and push it to your own GitHub, so you do not create a forked version unless you plan to help contribute to the project. The GitHub actions will compile your preferences as a zip with left and right controller files ready to flash. When you connect your board to the laptop, and double-press the reset switch you, you will see your board mounted and you can drag the appropriate folder to the board connected. It will dismount and you have the keyboard ready to type!&lt;/p&gt;
&lt;h3&gt;Micro-Controller Battery:&lt;/h3&gt;
&lt;p&gt;skill: easy&lt;br&gt;desolder: easy&lt;/p&gt;
&lt;p&gt;Some PCB boards will have a place for a power switch, mine did not, and I did not mind the risk of soldering the battery directly to the controller. Strip the wire tips so you can make a direct connection to the terminals at the front of your microcontroller. Black is negative and red positive.&lt;/p&gt;
&lt;h3&gt;Underglow LEDs :&lt;/h3&gt;
&lt;p&gt;skill: medium&lt;br&gt;desolder: medium&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*YPNrpvsb118GXHrdfZyuHQ.jpeg&quot;&gt;&lt;figcaption&gt;These were the most difficult pieces, I later went through to fix some joints&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Though I soldered these on, I am not a huge RGB lover. It drains the battery pretty quickly so I leave them disabled. There are two different LEDs on this board, one that points to the desk for an under-glow effect and the other is per key for a backlight under your keycaps. The power for these lights all follow a circuit, so if one is out, all of the following will not work either. Solder the edges of the LED so that the corner of the large LED that has an indent is in the corner of the 90-degree line marking of the PCB. As you solder along, pause and plug your controller in to see if the LED is soldered on and working correctly. Follow the graphic below to know how these LEDs relate. The backlighting LEDs will have a cut corner on one of the connectors which will signal how it should be soldered to the board on the little white arrow.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*D6dgyFrmUFFyiioK.png&quot;&gt;&lt;figcaption&gt;Image from the Foostan Guide on GitHub&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Cases:&lt;/h3&gt;
&lt;p&gt;This should be one of the coolest, and most straightforward parts. All you need to do is place your soldered-up PCB into the keyboard casing and tighten the hardware that came with the case down so your PCB stays in place. This is when it all starts to look functional.&lt;/p&gt;
&lt;h3&gt;Switches:&lt;/h3&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*2x3IvKlx_Gix7tAx&quot;&gt;&lt;/figure&gt;&lt;p&gt;The switches, I ordered Milky Yellow Geatron, have two prongs below that fit into the Switch sockets we soldered onto the PCB on the other side. These should click into place without too much pressure. Depending on your case you may have a piece that will go on top of your PCB to hold it into the casing. Place 4 switches in each corner and then screw the hardware into the case, this makes it easier to have it all lined up.&lt;/p&gt;
&lt;h3&gt;Keycaps:&lt;/h3&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*miy2zYLVJhIAWLj9kpk6tg.jpeg&quot;&gt;&lt;figcaption&gt;I chose DSA keycap profiles&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Each keycap will fit snuggly onto the switches to complete the look of your assembled keyboard. You can have many different profiles of switches, I ordered DSA, giving the keys a more uniform look.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/970/0*r57OSwPzrn0HCxL0&quot;&gt;&lt;figcaption&gt;Image from &lt;a href=&quot;https://chosfox.com/blogs/mechanical-keyboard-customization-guide/introduction-to-keycap-profiles&quot;&gt;Introduction to Keycap Profiles&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Hardships I Faced&lt;/h3&gt;
&lt;p&gt;At points, I did not think before soldering and it got me into some sticky situations. Spare parts can save you! I soldered the diodes in the reverse direction, which makes your board useless unless you fix it. I also soldered a microcontroller in place before tucking the battery under and giving myself no room and extra work to remove the soldered microcontroller and make space for the battery. I ordered hot-swap sockets after this incident so I did not need to go through this pain again.&lt;/p&gt;
&lt;p&gt;The hardest part of this was desoldering the pins. The solution that worked best for me was to add flux to my solder wick and desolder each pin but that will not unsolder the pins completely. To desolder, I had to press the iron on the bottom point of the pin to heat it enough and provide pressure to push it up and out.&lt;/p&gt;
&lt;p&gt;If you run into any LED issues, the previous or faulty LED could be the issue, because each one depends on the previous. I hope if you follow this guide and avoid my mistakes you get a nice experience with a great keyboard.&lt;/p&gt;
&lt;h3&gt;Testing It Out — Conclusion!&lt;/h3&gt;
&lt;p&gt;Your final product awaits, the only thing to do left is to get used to it by typing out a comment or the URL to my profile so that you can subscribe for more tutorials and content. I enjoyed the process of this build and cannot wait to explore what else I may be able to build with the leftover resources and tools!&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://keebmaker.com/pages/km-corne-build-guide&quot;&gt;KM Corne Build Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fluke.com/en-us/learn/blog/electrical/what-is-a-diode&quot;&gt;What is a Diode?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://missionengineering.com/what-is-a-trs-cable/&quot;&gt;What is a TRS Cable?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=5d59382b5613&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;
</description><pubDate>Tue, 11 Jun 2024 15:57:05 GMT</pubDate></item><item><title>AWS PrivateLink in a Straightforward Setup</title><link>https://joshb.io/blog/AWS%20PrivateLink%20in%20a%20Straightforward%20Setup/</link><guid isPermaLink="true">https://joshb.io/blog/AWS%20PrivateLink%20in%20a%20Straightforward%20Setup/</guid><description>
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*z7eQmgrjtNP8iZTl&quot;&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@mrpeker?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Mehmet Ali Peker&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Tips and Thought-Tricks from personal experience with PrivateLink and VPC Endpoints/Endpoint Services&lt;/h4&gt;
&lt;p&gt;One of the most useful services, and yet seemingly complex, is AWS PrivateLink. The service itself is more of a design pattern in which you make a PrivateLink via VPC (Virtual Private Cloud) endpoints and endpoint services. With this combination, you can provide a connection between VPCs without peering or a Transit Gateway over AWS Backbone (their internet, not the public), this includes a connection between two VPCs in separate AWS accounts.&lt;/p&gt;
&lt;h4&gt;Why Would You Need This?&lt;/h4&gt;
&lt;p&gt;The advantage of using AWS PrivateLink is greater security, between AWS Partners, AWS Marketplace, your on-prem servers, and between VPCs both within the same account or between accounts. This can apply the other way too, where you can provide services from your VPC to customers while staying compliant with HIPAA, PCI, and other regulations.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/proxy/1*szN9dWXU3Aes8v6ersbveA.png&quot;&gt;&lt;figcaption&gt;Diagram of a PrivateLink from an EC2 instance to an RDS Proxy&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;There are a couple of ways to go about creating your own SaaS and providing it to customers in AWS, one is with API Gatways, and the other is through PrivateLink. A common scenario faced is with ETL/ELT (Extract Load Transform) tools like Glue or Airbyte that live in an AWS Organization’s dedicated Data Engineering account and need to extract data from an RDS instance in a different account that may be affiliated with an application that the company has. PrivateLink can have multiple consumers while it has a single producer and eliminates the worry of CIDR overlap in your networks.&lt;/p&gt;
&lt;h4&gt;What about VPC Peering and Transit Gateways?&lt;/h4&gt;
&lt;p&gt;These two other AWS services may seem to provide a similar solution to what PrivateLink does at a glance, however, the biggest difference is the communication direction. PrivateLink is a unidirectional communication between services, a consumer in one VPC is consuming the service in a producer VPC, but the producer cannot consume anything from the consumer’s VPC. Both VPC Peering and Transit Gateway services provide Layer 3 bidirectional communication, meaning, that services in each VPC can talk to one another. VPC Peering and Transit Gateways can talk across regions, unlike PrivateLink.&lt;/p&gt;
&lt;p&gt;VPC Peering is a full-mesh architecture that allows your VPCs to act as if they are inside each other. When scaling these VPCs you may want to peer another, or maybe 3 others. Each VPC would have to peer each other to fully talk with each other.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*fwUpUoAv0jvgCT2mDRjNzQ.png&quot;&gt;&lt;figcaption&gt;VPC Peering Connection&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Something that solves this scenario and reduces overhead is the Transit Gateway. A Transit Gateway provides a hub-and-spoke model of allowing VPCs to connect. This solution is more scalable, although could introduce a small amount of latency with the network hops. Combining these services with other networking services like Direct Connect for your main office and a VPN for your branches can open up hybrid cloud opportunities and create a global network for your business.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*dbmbbrgLMSjrB1gJQG9PfA.png&quot;&gt;&lt;figcaption&gt;Global Network for a corporation can be established with these services&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Let’s Establish some PrivateLinks&lt;/h3&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*KApsMLg06JQHrH7_cT7NKA.png&quot;&gt;&lt;figcaption&gt;The solution we will implement allowing Glue to connect to the RDS instance&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Two AWS Accounts (we will be using free tier sizes)&lt;/li&gt;
&lt;li&gt;
&lt;a href=&quot;https://www.pulumi.com/docs/install/&quot;&gt;A Pulumi Account&lt;/a&gt; (it&apos;s free 😊), install the cli, and login via cli&lt;/li&gt;
&lt;li&gt;git clone &lt;a href=&quot;https://github.com/joshbrgs/medium-tutorials.git&quot;&gt;https://github.com/joshbrgs/medium-tutorials.git&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a preface, the RDS and IAM configuration does not follow the best practices guidelines around the least-privileged since this is for demonstration purposes, if you would like to use this for production use, I encourage modifying the IAM policy for the secret and modifying the RDS instance to suit your needs. This includes upgrading the encryption for the proxy and RDS instance.&lt;/p&gt;
&lt;h3&gt;Producer Account&lt;/h3&gt;
&lt;p&gt;First, we will start with the producer account. Run these commands to get to the example code:&lt;/p&gt;
&lt;pre&gt;cd medium-tutorials/privatelink/producer&lt;br&gt;# The Profile of your AWS cli refer to this for sso or use iam access keys &lt;br&gt;# https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html&lt;br&gt;pulumi config set aws:profile account1-profile-producer&lt;br&gt;pulumi up&lt;br&gt;# If it fails, rerun, there may have been a race condition 😬&lt;/pre&gt;
&lt;p&gt;You should have the following created in your account:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RDS with a Postgres Engine and MD5 password encryption with a custom parameter group&lt;/li&gt;
&lt;li&gt;RDS Proxy and Subnet Group&lt;/li&gt;
&lt;li&gt;Secrets Manager Secret for DB password and username&lt;/li&gt;
&lt;li&gt;A VPC&lt;/li&gt;
&lt;li&gt;Two Subnets&lt;/li&gt;
&lt;li&gt;Security Groups for the DB and proxy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you have confirmed this we can start setting up our PrivateLink! We first need to identify the IP addresses assigned to the RDS Proxy endpoint, and for this, you will need a CLI network tool such as dig .&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;On the Amazon RDS console, choose &lt;strong&gt;Proxies&lt;/strong&gt; in the navigation pane.&lt;/li&gt;
&lt;li&gt;Choose the proxy and locate the &lt;strong&gt;endpoint&lt;/strong&gt;, copy this for later&lt;/li&gt;
&lt;li&gt;Next you will want to &lt;strong&gt;modify the proxy&lt;/strong&gt; to use MD5 as the &lt;strong&gt;authentication&lt;/strong&gt; encryption method, this is a work around for the tutorial&lt;/li&gt;
&lt;li&gt;Use a networking CLI tool, such as dig, to find the proxy IP addresses: dig db-proxy.proxy-cfic8466upy8.us-east-1.rds.amazonaws.com&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Note these IPs, you will need them later&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;Target Group&lt;/h4&gt;
&lt;p&gt;These next 3 services combined create the PrivateLink endpoint for a producer account, the one that is providing a service.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In EC2, go to the Target Groups section&lt;/li&gt;
&lt;li&gt;Create a Target Group with &lt;strong&gt;IP Addresses&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Change the protocol to &lt;strong&gt;TCP&lt;/strong&gt; and change the port to &lt;strong&gt;5432&lt;/strong&gt; (the default Postgres port)&lt;/li&gt;
&lt;li&gt;Select the producer-vpc, click Next&lt;/li&gt;
&lt;li&gt;Use the IP’s noted from the previous step&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*4_UOboTEay8QkJi-ZdnCzg.png&quot;&gt;&lt;figcaption&gt;The Health Checks will pass as soon as the NLB is set&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Network Load Balancer&lt;/h4&gt;
&lt;p&gt;Next, let’s create a Network Load Balancer and its Security Group to route the traffic coming into our VPC to the correct service / Target Group.&lt;/p&gt;
&lt;p&gt;To create the &lt;strong&gt;Security Group&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the EC2 Console, choose Security Groups and click &lt;strong&gt;Create Security Group&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Give it a name and description and choose the producer-vpc&lt;/li&gt;
&lt;li&gt;Add an &lt;strong&gt;inbound rule&lt;/strong&gt; to receive&lt;strong&gt; 5432&lt;/strong&gt; traffic from the &lt;strong&gt;VPC CIDR range&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;For the &lt;strong&gt;outbound rule&lt;/strong&gt;, change the port to &lt;strong&gt;5432&lt;/strong&gt; and the &lt;strong&gt;destination to the proxy security group&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Create descriptions as needed&lt;/li&gt;
&lt;li&gt;Go to the &lt;strong&gt;proxy security group&lt;/strong&gt;, and click &lt;strong&gt;Edit inbound rules&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Delete&lt;/strong&gt; the current Inbound Rule and &lt;strong&gt;Add&lt;/strong&gt; a new one allowing port &lt;strong&gt;5432&lt;/strong&gt; &lt;strong&gt;from the new Security Group&lt;/strong&gt; we created for the Load Balancer&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*BBYN3wF3Xb5oAK0X6DGKsg.png&quot;&gt;&lt;figcaption&gt;This is the Outbound rule for the Network Load Balancer Security Group&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;To create the &lt;strong&gt;Load Balancer&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In EC2 Console, choose &lt;strong&gt;Load Balancers &lt;/strong&gt;and&lt;strong&gt; Create Load Balancer&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Choose &lt;strong&gt;Network Load Balancer&lt;/strong&gt;, give it a name, and select &lt;strong&gt;Internal&lt;/strong&gt; for the scheme&lt;/li&gt;
&lt;li&gt;Select the producer-vpc and both AZs that show up (make sure the subnets are private)&lt;/li&gt;
&lt;li&gt;For the &lt;strong&gt;Security Group&lt;/strong&gt;, make sure to click the one we just created in the previous step&lt;/li&gt;
&lt;li&gt;In the Listeners section, change the protocol to &lt;strong&gt;TCP&lt;/strong&gt; and port &lt;strong&gt;5432&lt;/strong&gt; and select the &lt;strong&gt;Target Group&lt;/strong&gt; from the previous step for the default action.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Create Load Balancer&lt;/strong&gt; at the bottom, it may take a minute to provision&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*GX20Pb4_4Oker37GplC1Yg.png&quot;&gt;&lt;figcaption&gt;Active NLB, check the target group, which should also be healthy now!&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;Endpoint Service&lt;/h4&gt;
&lt;p&gt;This is the next piece where our previous work all comes together, creating the Endpoint Service&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;On the Amazon VPC console, choose &lt;strong&gt;Endpoint Services &lt;/strong&gt;and click&lt;strong&gt; Create Endpoint Service&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Give it a name, select &lt;strong&gt;Network&lt;/strong&gt; for Load Balancer Type, and select the NLB we created in the previous step, all else can stay default, and click &lt;strong&gt;Create&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;In the &lt;strong&gt;Allow Principals&lt;/strong&gt; tab, select Allow Principals, and enter your consumer account arn arn:aws:iam::&amp;lt;account-number&amp;gt;:root . This can be more restrictive against a given role or user too.&lt;/li&gt;
&lt;li&gt;Copy the &lt;strong&gt;Service Name&lt;/strong&gt; for the next step&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*FiNEYrHbSPHQAZKWbx715w.png&quot;&gt;&lt;/figure&gt;&lt;h4&gt;Consumer Account&lt;/h4&gt;
&lt;p&gt;Now let’s log into the consumer account as well as run these commands to spin up our network:&lt;/p&gt;
&lt;pre&gt;cd medium-tutorials/privatelink/consumer&lt;br&gt;pulumi config set aws:profile account2-profile-consumer&lt;br&gt;pulumi up&lt;/pre&gt;
&lt;p&gt;The following should have been created in this new consumer account:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A VPC&lt;/li&gt;
&lt;li&gt;A Subnet&lt;/li&gt;
&lt;li&gt;A Security Group for Glue&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;VPC Endpoint and Accepting Connection&lt;/h4&gt;
&lt;p&gt;In your consumer AWS account, we will use Glue as an ETL tool and connect with a jdbc connector string to the Postgres db in our other AWS account! Let’s begin by creating a Security Group for the soon-to-come VPC Endpoint. Note that the Glue Security Group needs all ports inbound and outbound but uses the source for both as the same security groups.&lt;/p&gt;
&lt;p&gt;Go to the Amazon VPC Console, navigate to the &lt;strong&gt;Endpoints&lt;/strong&gt; screen, and click &lt;strong&gt;Create Endpoint&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Provide a name, and select &lt;strong&gt;Other endpoint services&lt;/strong&gt; under the Service category&lt;/li&gt;
&lt;li&gt;For the Service name under &lt;strong&gt;Service settings&lt;/strong&gt;, provide the &lt;strong&gt;Service Endpoint Name&lt;/strong&gt; you copied from the previous section and click &lt;strong&gt;Verify Service&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Select the &lt;strong&gt;consumer-vpc&lt;/strong&gt; and one subnet will be grey while the other can be selected, &lt;strong&gt;select the one available&lt;/strong&gt;, the other is to demonstrate how the Endpoint and Service Endpoint need the same AZs for connectivity.&lt;/li&gt;
&lt;li&gt;Select the &lt;strong&gt;Security Group&lt;/strong&gt; for the endpoint (endpoint is in the name) and click &lt;strong&gt;Create endpoint&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*AujuaAIE7OhJUC_vfkCcOg.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;In the other account, we will have to accept/approve the connection of this endpoint and add inbound 5432 from the consumer CIDR to the NLB Security Group.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log back into the producer account&lt;/li&gt;
&lt;li&gt;Navigate to the &lt;strong&gt;VPC Console&lt;/strong&gt; and &lt;strong&gt;Endpoint Services&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Go to the &lt;strong&gt;Endpoint Connections&lt;/strong&gt; tab, click the &lt;strong&gt;Actions&lt;/strong&gt; tab, and &lt;strong&gt;Accept the endpoint connection request&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;After a few minutes, you should see &lt;strong&gt;Pending&lt;/strong&gt; change to &lt;strong&gt;Available&lt;/strong&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/800/1*zP6wnppdBWrGCjoMVXxdRg.png&quot;&gt;&lt;/figure&gt;&lt;h4&gt;Test the connection&lt;/h4&gt;
&lt;p&gt;Now we can go test out our connection from Glue! You will want to note down the &lt;strong&gt;RDS Database Identifier&lt;/strong&gt; before we log back into the &lt;strong&gt;consumer account. &lt;/strong&gt;The other info we need is the &lt;strong&gt;endpoint DNS name&lt;/strong&gt;, which is the first in the list, and head over to the &lt;strong&gt;AWS Glue Console&lt;/strong&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Click &lt;strong&gt;Data Connections&lt;/strong&gt;, and select the &lt;strong&gt;Create Connection &lt;/strong&gt;button in the bottom pane&lt;/li&gt;
&lt;li&gt;In the grid, select &lt;strong&gt;JDBC &lt;/strong&gt;and&lt;strong&gt; Next&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Add the jdbc url: jdbc:postgresql://&amp;lt;first-endpoint-dns-name&amp;gt;:5432/&amp;lt;database_name&amp;gt; and the username and password for the database, which can be found in the producer code in my git repo (since this is a non-secure tutorial) or in the secrets manager the “dbpassword” is created&lt;/li&gt;
&lt;li&gt;You will need to add &lt;strong&gt;Network options&lt;/strong&gt; at the bottom&lt;/li&gt;
&lt;li&gt;Select the &lt;strong&gt;consumer-vpc&lt;/strong&gt; in the drop-down, select the &lt;strong&gt;private subnet &lt;/strong&gt;and&lt;strong&gt; Glue Security Group, &lt;/strong&gt;and click&lt;strong&gt; Next&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Name the connector, you cannot change this later, and &lt;strong&gt;Create&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Last but not least, select the connection at the bottom of the window, click the &lt;strong&gt;Actions&lt;/strong&gt; drop-down, select &lt;strong&gt;Test Connection, &lt;/strong&gt;then select th&lt;strong&gt;e &lt;/strong&gt;Glue Service Role (If this does not exist you can create a new role with the &lt;strong&gt;AWSGlueServiceRole policy&lt;/strong&gt; attached and &lt;strong&gt;AmazonS3FullAccess policy&lt;/strong&gt;) If you get an error about the NAT Gateway or s3 endpoint, check that the subnet has the route table associated with it.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*2Id0D1hCB0S9Pho53GFf9Q.png&quot;&gt;&lt;figcaption&gt;Successful connection, go Glue some data!&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Success, you can now use a Glue Crawler or Glue ETL Job to extract data from the remote database securely!&lt;/p&gt;
&lt;h4&gt;Clean Up&lt;/h4&gt;
&lt;p&gt;To clean up this solution, you will just need to delete the resources we created in this example (endpoint, endpoint service, nlb, security groups, and target group, the rds database may need manually destroyed as well). The networking and instances can be deleted via pulumi destroy in the consumer and producer directories.&lt;/p&gt;
&lt;p&gt;I tried this solution out with MySQL, and an issue arose with the “user@host” pattern. The host would need to change to the CIDR of the consumer VPC or a wildcard. To change this, we would need a Bastion Host to connect a MySQL client to the database. Since this is a tutorial, I wanted to keep as minimal resources as possible, but feel free to experiment!&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;PrivateLink lets you securely connect to separate VPCs keeping your traffic within AWS Backbone. This can be beneficial for exposing SaaS applications to developers using AWS, or even ensuring security between your own AWS accounts when using ELT/ETL tools. The PrivateLink connection is not limited to AWS Services, for you can set it up so that an EC2 instance running a service you created can be consumed, or you will commonly find PrivateLink as an option to consume your AWS Marketplace offerings. I hope this will help you in your journey to create the next big SaaS product!&lt;/p&gt;
&lt;h4&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/blogs/database/use-amazon-rds-proxy-and-aws-privatelink-to-access-amazon-rds-databases-across-aws-organizations-at-american-family-insurance-group/&quot;&gt;Use Amazon RDS Proxy and AWS PrivateLink to access Amazon RDS databases across AWS Organizations at American Family Insurance Group | Amazon Web Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/vpc/latest/privatelink/what-is-privatelink.html&quot;&gt;What is AWS PrivateLink?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html&quot;&gt;What is VPC peering?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/vpc/latest/tgw/what-is-transit-gateway.html&quot;&gt;What is a transit gateway?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/directconnect/latest/UserGuide/direct-connect-gateways-intro.html&quot;&gt;Direct Connect gateways&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=ec8bcb1e03a8&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;https://awstip.com/aws-privatelink-in-a-straightforward-setup-ec8bcb1e03a8&quot;&gt;AWS PrivateLink in a Straightforward Setup&lt;/a&gt; was originally published in &lt;a href=&quot;https://awstip.com/&quot;&gt;AWS Tip&lt;/a&gt; on Medium, where people are continuing the conversation by highlighting and responding to this story.&lt;/p&gt;
</description><pubDate>Mon, 06 May 2024 12:02:19 GMT</pubDate></item><item><title>The Modern Agile Organization</title><link>https://joshb.io/blog/The%20Modern%20Agile%20Organization/</link><guid isPermaLink="true">https://joshb.io/blog/The%20Modern%20Agile%20Organization/</guid><description>
&lt;figure&gt;&lt;img alt=&quot;The Scrum Framework is not always Agile unless you make it&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*cPWwZbQFiESvi_FK&quot;&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@irfansimsar?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;İrfan Simsar&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;How to empower self-ownership in teams, excellent software, and quick iterations&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;While this is an opinionated piece, the idea of Agile is to be able to adapt to the project’s needs and organize high-functioning teams.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;What is Agile?&lt;/h4&gt;
&lt;blockquote&gt;Agile isn’t defined by a set of ceremonies or specific development techniques. Rather, agile is a group of methodologies that demonstrate a commitment to tight feedback cycles and continuous improvement. — &lt;a href=&quot;https://www.atlassian.com/agile&quot;&gt;Atlassian&lt;/a&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Agile methodology tends to apply to projects and creative tasks at hand, whereas other businesses may be more privy to Lean management, which is great for repeatable operations and routine.&lt;/p&gt;
&lt;p&gt;The Agile Manifesto was written in 2001 by seventeen individuals. They found consensus on 4 core values that are further explained with the 12 Agile principles. The whole object of Agile is to put the people first over the process and increase communications to foster a productive environment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Agile Principles tldr:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Continuous Delivery of valuable software to end users&lt;/li&gt;
&lt;li&gt;Welcome changing requirements&lt;/li&gt;
&lt;li&gt;Business and Developers work closely&lt;/li&gt;
&lt;li&gt;Build projects around motivated people and trust they will get the job done&lt;/li&gt;
&lt;li&gt;Convey information within teams face-to-face&lt;/li&gt;
&lt;li&gt;Working software is the measure of progress&lt;/li&gt;
&lt;li&gt;Reduce burnout&lt;/li&gt;
&lt;li&gt;Continuous attention to technical excellence and good design&lt;/li&gt;
&lt;li&gt;Simplicity&lt;/li&gt;
&lt;li&gt;Self-organized teams help emerge the best designs and architecture&lt;/li&gt;
&lt;li&gt;At regular intervals, reflect on how to be more effective and tune behavior accordingly&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course, this would not be an Agile blog if it did not mention the Scrum Framework. Scrum is a subset of the Agile process that is based around iterative software development cycles, with several key steps in the workflow — a daily standup, sprints (period of work, most seen is 2 weeks), sprint planning, sprint review, and sprint retrospective. A Scrum team consists of 10 or less people. To make an analogy, Six Sigma is to Scrum, as Lean is to Agile.&lt;/p&gt;
&lt;p&gt;Before Agile was common, the Waterfall model was a popular way to manage projects. Waterfall consists of sequential processes, for example, the design and architecture of a feature is first, development work is “done”, it is handed to Ops, then from Ops to QA, and if bugs are found, return to development. Scheduled releases are when the features should be done and ready for live public use.&lt;/p&gt;
&lt;h4&gt;Pitfalls&lt;/h4&gt;
&lt;p&gt;Sometimes frameworks like Scrum are adopted to help establish processes and speed up software delivery, and sometimes these processes will go overboard and create burnout, slower deliveries, and mistrust.&lt;/p&gt;
&lt;p&gt;During sprint planning meetings, it is a common practice to estimate the complexity of the ticketed work; however, some may conceive the ticket estimate (points) as time-based values. This then is used to “predict” feature readiness or delivery and can cause tension when things do not go as planned. Estimating’s primary purpose is to avoid developer burnout by ensuring work based on complexity is given to the most appropriately experienced individuals (junior engineers may not take an XL ticket).&lt;/p&gt;
&lt;p&gt;Scrum prescribes certain meetings to take place during and before sprints, and Agile does focus a bit on communication; yet, this pattern tends to evolve into more and more meetings, where 80% of developer time is spent in meetings and 20% coding and designing.&lt;/p&gt;
&lt;p&gt;Scrum can often lead to a misperceived balance of communication. The engineers on the development team should be trusted enough to predict how long it may take to build x feature and what it takes to build it. Without this trust or communication from engineers to stakeholders, unreasonable expectations and delivery dates, also known as a Crunch deadline, can happen more often than not, leading to developer burnout and cut corners.&lt;/p&gt;
&lt;p&gt;The easiest way to avoid, or recover from, these pitfalls, is to take a step back from your processes and revisit the principles.&lt;/p&gt;
&lt;h4&gt;Making it Modern: Roles in Agile Teams&lt;/h4&gt;
&lt;p&gt;Much like Agile, the way teams adopt the philosophy is ever changing and really what matters most is what is productive for that team. The basic framework, adapted to a more modern approach prescribes:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Business Liaison (Product Owner)&lt;/strong&gt; — As the Liaison, the job entails providing the business/stakeholders with insights on what the team has developed thus far and coordinating with the Agility Lead/Project Manager on what the priorities of the business are. Data should be utilized to help inform the development of new features and presented to the business to aid in decision-making.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Developers&lt;/strong&gt; — The Developers on the team get the planned work done. This work may consist of system and application architecture, developing ML models, developing APIs (Application Programming Interfaces), creating UIs and even developing UI wireframes. Developers are responsible for figuring out how to build the application and establishing priority and estimated delivery dates with the help of the Agility Lead.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Agility Lead (Scrum Master)&lt;/strong&gt; — The Agility Lead is also likely to be your qualified Project Manager. They help assist in running efficient meetings, establishing communication channels, arbitrating for the Liaison and the Developer Lead, and aiding in the visualization of timelines for deliverables.&lt;/p&gt;
&lt;h4&gt;Making it Modern: DevOps and NoOps Culture Adoption is Agile&lt;/h4&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/640/0*m9s3J6umcyzi3bQ0.png&quot;&gt;&lt;figcaption&gt;DevOps Toolchain&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Developer Teams&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DevOps is an organization philosophy to help the adoption of Agile. In Waterfall models, Ops and Developers are separate teams and involve separate pieces of work; but with the DevOps philosophy, developers widen the area of responsibility as they not only handle the design and development of projects (left circle) but also own the process into the maintenance and observability phase (right circle). With this workflow, the people who built the project know it best and how it should run as well. This allows developers to catch bugs and performance issues earlier and iterate.&lt;/p&gt;
&lt;p&gt;DevOps is a part of the shift-left culture, where the sooner you find issues the faster they are fixed and deliverables are better quality. In the verification phase, developer teams will write automated tests from the smallest testable code to how the feature or project integrates into the overall application.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unit Tests (business logic, where a function should always add 2 numbers outcome should be expected)&lt;/li&gt;
&lt;li&gt;Integration Tests (Behavior-driven is most common, if a user clicks — x should happen)&lt;/li&gt;
&lt;li&gt;End to End Tests (E2E how the feature works in the application)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If your company can hire QA Testers, they can appreciate the added quality, while they try to find issues in newly released features outside of the sprint cadence your developers are working in.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Platform Teams&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;NoOps is a trending pattern that is the idea of fewer infrastructure Subject Matter experts needed on individual teams because the creation of infrastructure is instead approachable and user-friendly in design. The key to this is having Platform Teams!&lt;/p&gt;
&lt;p&gt;Platform Engineering Teams consist of Backend, Frontend, and Infrastructure subject matter experts who create internal tooling that helps application teams create services and projects that adhere to company standards and self-service infrastructure tooling (you want a new Database provisioned, you just need to fill out a small form and click go). Platform Teams help set up UI libraries and Internal Developer Portals that keep a catalog of your projects in your software ecosystem, giving managers a holistic view of what teams are doing, costing, and what makes the applications!&lt;/p&gt;
&lt;h4&gt;Making it Modern: Organization Structure, Trust, and Empowerment Matter&lt;/h4&gt;
&lt;blockquote&gt;[O]rganizations which design systems (in the broad sense used here) are constrained to produce designs which are copies of the communication structures of these organizations. — Melvin E. Conway, How Do Committees Invent?&lt;/blockquote&gt;
&lt;p&gt;When it comes to organizing your engineering teams — let them do the work. Self-organizing teams allow the engineers to acquire the talent they need to build your products. The Engineering Lead of the team can work with their Engineering Manager, or in smaller companies this may be the same role, and either acquire the talent internally or, with the help of HR, externally. The team can then be responsible for a couple of different projects focused on business domains, for example in an e-commerce company, the team could be responsible for the checkout and navigation of the application. This will help build a decoupled system that can evolve as your business does.&lt;/p&gt;
&lt;p&gt;Empower the individuals that are a part of the company and/or team. They may just have the next big idea to create a better product or feature. This entails trusting the engineers hired to actively want to build new features and projects as well as collaborate with them to help establish viable delivery timelines.&lt;/p&gt;
&lt;p&gt;Agile methodology is easier said than done, and when implemented well, teams can deliver high-quality features faster. This is only a guide to help empower the creative process that is engineering applications.&lt;/p&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://agilemanifesto.org/principles.html&quot;&gt;Principles behind the Agile Manifesto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/what-is/scrum/&quot;&gt;What is Scrum? - Scrum Methodology Explained - AWS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.techtarget.com/searchitoperations/definition/NoOps&quot;&gt;What is NoOps? - TechTarget Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/advice/0/how-can-you-avoid-anti-patterns-harm-your-scrum-teams-collaboration&quot;&gt;How can you avoid anti-patterns that harm your Scrum team&apos;s collaboration?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Conway%27s_law&quot;&gt;Conway&apos;s law - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=56898faafb11&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;
</description><pubDate>Mon, 12 Feb 2024 14:06:29 GMT</pubDate></item><item><title>Git Tagging — How to Use them for Success</title><link>https://joshb.io/blog/Git%20Tagging%E2%80%8A%E2%80%94%E2%80%8AHow%20to%20Use%20them%20for%20Success/</link><guid isPermaLink="true">https://joshb.io/blog/Git%20Tagging%E2%80%8A%E2%80%94%E2%80%8AHow%20to%20Use%20them%20for%20Success/</guid><description>
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/0*QlpCXtmuMsxNE7dP&quot;&gt;&lt;figcaption&gt;Photo by &lt;a href=&quot;https://unsplash.com/@yancymin?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Yancy Min&lt;/a&gt; on &lt;a href=&quot;https://unsplash.com/?utm_source=medium&amp;amp;utm_medium=referral&quot;&gt;Unsplash&lt;/a&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Git Tagging — How to Use them for Success&lt;/h3&gt;
&lt;p&gt;Writing maintainable and scalable code is hard when you are trying to engineer the next big craze in software. You have to version your software so that multiple people can help you build this tool, and on top of that you need a way to mark when the product is stable for use and when newer features are available. Thankfully, we have Git to help us out!&lt;/p&gt;
&lt;p&gt;This article will introduce you to the basics of Git, including a brief history, the use of Git tags, using git tags with a Git branching strategy, and how to use GitHub Actions based on tags to create Releases.&lt;/p&gt;
&lt;h4&gt;What is Git?&lt;/h4&gt;
&lt;p&gt;Git is a version control system (VCS) created in 2005 by the Linux Community and in particular Linus Torvalds, creator of Linux. It was developed in a response to a previous VCS being used for the Linux kernel becoming a pay-to-use service. When creating a new VCS the goal was for the system to embody these goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Speed&lt;/li&gt;
&lt;li&gt;Simple design&lt;/li&gt;
&lt;li&gt;Strong support for non-linear development (thousands of parallel branches)&lt;/li&gt;
&lt;li&gt;Fully distributed&lt;/li&gt;
&lt;li&gt;Able to handle large projects like the Linux kernel efficiently (speed and data size)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, Git is the most widely used VCS for software development. Most other version control systems use delta-based version control, but Git is a stream of snapshots to reference older versions, generally building upon the software. Most common git commands when contributing to a project are:&lt;/p&gt;
&lt;pre&gt;git clone &amp;lt;repo url, or git uri&amp;gt; #clones remote code to local machine&lt;br&gt;&lt;br&gt;git branch #lists branches on local machine, -a will list remote and local&lt;br&gt;&lt;br&gt;git checkout #switch to a different branch -b to create a branch and switch to it&lt;br&gt;&lt;br&gt;git add &amp;lt;file name or names under a directory&amp;gt; #adds files to staging state to before commiting them&lt;br&gt;&lt;br&gt;git commit -m &quot;message here&quot; #commits files in staging state with message&lt;br&gt;&lt;br&gt;git push #push local commits to remote branch&lt;br&gt;&lt;br&gt;git merge &amp;lt;commit or branch to merge into current branch&amp;gt; #merges work from one branch to another&lt;br&gt;&lt;br&gt;git rebase #move or combine a series of commits to a new base commit&lt;br&gt;&lt;br&gt;git cherry-pick #grab a commit and append it to your current working HEAD (HEAD being currently checked out latest commit)&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;For anyone who is interested in data structures, think of Git like a Directed Acyclic Graph (DAG). DAGs are, by design, always directed forward to the next node, without a cycle back to a previous node. Check out this &lt;/em&gt;&lt;a href=&quot;https://medium.com/@hamzasurti/advanced-data-structures-part-1-directed-acyclic-graph-dag-c1d1145b5e5a&quot;&gt;&lt;em&gt;Medium article&lt;/em&gt;&lt;/a&gt;&lt;em&gt; for a more in depth explanation of DAG data structures.&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;How Does Tagging Work&lt;/h4&gt;
&lt;p&gt;That’s some of the basics of Git — but what are Git tags? Git tags are a reference to a commit (commits send latest changes of your revisions to the VCS, you use git push to then send those to the remote repository). Tags help create a readable history of the progression for your software; instead of remembering the commit c8ad8cc we can remember that this commit has a Semantic Version tag of v1.0.0 (major, minor, patch respectively). Some of the helpful Git commands for tagging are as followed:&lt;/p&gt;
&lt;pre&gt;git tag &amp;lt;tag name&amp;gt; #Create Lightweight Tag&lt;br&gt;&lt;br&gt;git tag -a &amp;lt;tag name&amp;gt; -m &amp;lt;tag message&amp;gt; #Create Annotated Tag&lt;br&gt;&lt;br&gt;git tag -n #List annotated tags&lt;br&gt;&lt;br&gt;git tag -d &amp;lt;tag name&amp;gt; #Delete tag&lt;br&gt;&lt;br&gt;git push origin &amp;lt;tag name&amp;gt; #Push a tag to remote Git repository&lt;/pre&gt;
&lt;p&gt;The big difference between lightweight tags and annotated tags are when an engineer is listing the annotated tags with git tag -n. Annotated tags will give a user more context around why the tag was used. Most commonly your tags will be Semantic Versions and these tags can be straightforward until one may see postfixes of -rc or a tag that may not be a version and instead be a string like development. Annotated Tags allow you to provide a small message that can clear up the meaning behind some of these other tags present in your Git History.&lt;/p&gt;
&lt;p&gt;Another benefit of Git tags is that the majority of VCS platforms like GitHub, Bitbucket, or GitLab provide a user-friendly way to display source code at the point in time of a tag.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/302/1*uEK_gKvR0rya87m3h-tn8g.png&quot;&gt;&lt;/figure&gt;&lt;h4&gt;Why Versioning Matters&lt;/h4&gt;
&lt;p&gt;Versioning your software matters, and majority of the industry is familiar with Semantic Versioning. Depending on your team agreement, you can tag any new work as a new version or group pieces of work, like multiple bugfixes in a new version. For a quick explanation of how Semantic Versioning works:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Patch Bump for bugfixes = v1.0.0 -&amp;gt; v1.0.1&lt;/li&gt;
&lt;li&gt;Minor Bumps for new features without breaking old functionality = v1.0.1 -&amp;gt; v1.2.0&lt;/li&gt;
&lt;li&gt;Major Bumps for big new additions and changes in how the application works = v1.2.0 -&amp;gt; v2.0.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So why does versioning matter? It is to keep the progress of software trackable and show that the application is evolving, even if the interface may not change. Engineers can go back to a previous version that is currently in production and patch bugs the users may have found. It can also help establish milestones — what we call releases that may have a changelog of new features and bugs that have been patched since the last release.&lt;/p&gt;
&lt;p&gt;The Software Development Lifecycle can take myriad forms — but let’s examine, for example, a project that may have multiple engineers working on it. For simplicity, we will be merging our ticket instead of &lt;a href=&quot;https://www.atlassian.com/git/tutorials/merging-vs-rebasing&quot;&gt;rebasing&lt;/a&gt;. Everything starts on main branch, and in this scenario, it contains the code that is present in the teams Test environment. We have been tasked with creating a new feature, so a new branch will be made with the name of feature (or feat) and the ticket or issue number from our project management tool. By the time we made our first commit, others have committed more code to main branch.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/581/1*cDhFDpJVCOREYAuG1L768Q.png&quot;&gt;&lt;figcaption&gt;Creating a feature branch&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;We continue our work and open a Pull Request so an approver can check that our work is a valid contribution. When they approve, we merge this branch back to main and tag the merge commit on main with v1.0.0.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/901/1*dT4gk1b22-Sce1md_Nh36g.png&quot;&gt;&lt;figcaption&gt;Merging feature branch and tagging merge commit&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;After the branch is merged, we can delete the branch so that the main branch has a clean, clear history. Our v1.0.0 tag makes it to Production and has been in use for a while. The contributors continue to build out future features — when all of the sudden, a bug is noticed by a user. The Tech Lead determines this bug needs to be fixed before new features are released, so the contributors fix the bug in one of the latest commits and verify the fix in Test environment.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*nsc7sNtkLbV20hM74-brxw.png&quot;&gt;&lt;figcaption&gt;Delete feature branch, during new development v1 has a bug, fix is made and pushed to main&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;In order to release the software, we must tag it to trigger an automated workflow. Our Tech Lead would like us to release the new patch without any new feature development that has been worked on; in order to do this, we create a branch off of our Git tag at v1.0.0 and use git cherry-pick 254214 to grab only the verified fix off of our main branch. When pushing this new commit to our branch, we tag it with v1.0.1 and delete the branch to clean up. The commit and tag will stay at this reference point and our automation will take care of releasing this new patch.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*8940Q3j_vEV0oqP32uoG0w.png&quot;&gt;&lt;figcaption&gt;GitHub Tags option when looking at switch branches selector&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;GitHub Actions for Automation&lt;/h4&gt;
&lt;p&gt;Tags are a great trigger for automation, and most VCS platforms will provide this feature to you. Let’s use GitHub Workflows to build on our previous example the automation that takes place when a tag is created. Workflows consist of jobs, that in turn contain Actions, and Actions can be created for reusability in your jobs or other’s if published publicly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Disclaimer:&lt;/em&gt;&lt;/strong&gt;&lt;em&gt; There are GitHub Actions that more effective in handling your tagging needs and they can help ensure your GitHub Workflows are readable. These are just to demonstrate an action with the use of the git tag command, similar to how one can manually push git tags. I encourage you to checkout the existing GitHub Actions and create automation useful to your project’s needs!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In this scenario we have a Node project, and with it the package.json that stores the version of our application. We want a workflow to create a Git tag every time something is merged into main or pushed to main (this could be an overzealous approach and purely up to team agreement). We can create something like the below to do this:&lt;/p&gt;
&lt;pre&gt;#.github/workflows/tagger.yml&lt;br&gt;on:&lt;br&gt;  push:&lt;br&gt;    branches:&lt;br&gt;      - main&lt;br&gt;&lt;br&gt;jobs:&lt;br&gt;  build:&lt;br&gt;    runs-on: ubuntu-latest&lt;br&gt;    steps:&lt;br&gt;      - name: Get Version&lt;br&gt;        run: echo &quot;VERSION=$(cat package.json | grep \&quot;version\&quot; | cut -d&apos;&quot;&apos; -f 4)&quot; &amp;gt;&amp;gt; $GITHUB_ENV&lt;br&gt;      - name: Tag&lt;br&gt;        run: git tag -a v${{ env.VERSION }} -m &quot;Releases new version&quot;&lt;br&gt;      - name: Push Tag&lt;br&gt;        run: git push origin v${{ env.VERSION }}&lt;br&gt;&lt;/pre&gt;
&lt;p&gt;We may want to take this a step further, to trigger a Workflow every time a tag is created and pushed to our remote repository. This next Workflow can create a GitHub Release of our application and generate specific information like a changelog of features and patches since our last release! This will help our users see the progress our app has made and new features that are available to them.&lt;/p&gt;
&lt;figure&gt;&lt;img alt=&quot;&quot; src=&quot;https://cdn-images-1.medium.com/max/1024/1*vW9bcLG1qVhyeamRkyY0PQ.png&quot;&gt;&lt;figcaption&gt;ArgoCD release page with related tag&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;In order to automate something like this we can provide another workflow definition with a couple of steps. This will build and zip our project as an artifact to attach to our release for downloading, creating the release found on our GitHub Repository!&lt;/p&gt;
&lt;pre&gt;#.github/workflows/releaser.yml&lt;br&gt;name: GitHub Actions Releaser&lt;br&gt;on:&lt;br&gt;  push:d&lt;br&gt;    tags:&lt;br&gt;      - &apos;v*&apos; # Push events to matching v*, i.e. v1.0, v20.15.10&lt;br&gt;&lt;br&gt;jobs:&lt;br&gt;  build:&lt;br&gt;    name: Create Release&lt;br&gt;    runs-on: ubuntu-latest&lt;br&gt;    steps:&lt;br&gt;      - name: Checkout Code&lt;br&gt;        uses: actions/checkout@v2&lt;br&gt;      - name: Build project # Using zip as an example&lt;br&gt;        run: |&lt;br&gt;          zip my-artifact README.md&lt;br&gt;      - name: Create Release&lt;br&gt;        id: releaser&lt;br&gt;        uses: actions/create_release@v1&lt;br&gt;        env:&lt;br&gt;          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&lt;br&gt;        with:&lt;br&gt;          tag_name: ${{ github.ref }}&lt;br&gt;          release_name: Release ${{ github.ref }}&lt;br&gt;          body: |&lt;br&gt;            Changelog body goes here, this can be more dynamic than hard-coded&lt;br&gt;          draft: false&lt;br&gt;          prerelease: false&lt;br&gt;      - name: Upload Release&lt;br&gt;        id: upload-release&lt;br&gt;        uses: actions/upload-release-asset@v1&lt;br&gt;        env:&lt;br&gt;          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&lt;br&gt;        with:&lt;br&gt;          upload_url: ${{ steps.releaser.outputs.upload_url }} # This pulls from the CREATE RELEASE step above&lt;br&gt;          asset_path: ./my-artifact.zip&lt;br&gt;          asset_name: my-artifact.zip&lt;br&gt;          asset_content_type: application/zip&lt;/pre&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Software is a game of decision-making and trade-offs. A common issue one must face when developing the next big app is how to version the software and how they may want to leverage their VCS to help. Git tagging offers a great solution to this problem and is a very common pattern in projects you will find in open-source communities and in workplace settings. Tagging can aid in onboarding of new contributors by providing a clear history of your applications evolution and even help reduce overhead by automating your releases and changelogs. Git is one of the most popular VCS and understanding the utility it can provide will help you in your role as a Software Engineer.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Basics-Tagging&quot;&gt;Git - Tagging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/argoproj/argo-cd&quot;&gt;GitHub - argoproj/argo-cd: Declarative Continuous Deployment for Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/actions/quickstart&quot;&gt;Quickstart for GitHub Actions - GitHub Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/actions/upload-release-asset&quot;&gt;GitHub - actions/upload-release-asset: An Action to upload a release asset via the GitHub Release API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@hamzasurti/advanced-data-structures-part-1-directed-acyclic-graph-dag-c1d1145b5e5a&quot;&gt;Advanced Data Structures Part 1: Directed Acyclic Graph (DAG)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;https://medium.com/_/stat?event=post.clientViewed&amp;amp;referrerSource=full_rss&amp;amp;postId=0e96ada9dec8&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;
</description><pubDate>Sun, 14 Jan 2024 23:44:42 GMT</pubDate></item></channel></rss>